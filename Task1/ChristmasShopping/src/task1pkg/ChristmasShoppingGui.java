/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package task1pkg;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import static java.lang.Thread.sleep;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HChittenden
 */
public class ChristmasShoppingGui extends javax.swing.JFrame {

    /**
     * Creates new form ChristmasShoppingGui
     */
    public ChristmasShoppingGui() {
        initComponents();
        jTextFieldCurrentTimeInit();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextFieldCurrentTime = new javax.swing.JTextField();
        jLabelCurrentTime = new javax.swing.JLabel();
        jButtonDaysCalc = new javax.swing.JButton();
        jTextFieldChristmas = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonLoad = new javax.swing.JButton();
        jTextFieldFilePath = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Christmas Shopping");

        jTextFieldCurrentTime.setText("jTextField1");
        jTextFieldCurrentTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCurrentTimeActionPerformed(evt);
            }
        });

        jLabelCurrentTime.setText("Current Time");

        jButtonDaysCalc.setText("Days to Christmas");
        jButtonDaysCalc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDaysCalcActionPerformed(evt);
            }
        });

        jTextFieldChristmas.setText("Click button to calculate");
        jTextFieldChristmas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldChristmasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jLabelCurrentTime, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldCurrentTime, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(178, 178, 178)
                .addComponent(jButtonDaysCalc, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jTextFieldChristmas, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(221, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCurrentTime, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCurrentTime)
                    .addComponent(jButtonDaysCalc)
                    .addComponent(jTextFieldChristmas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setFillsViewportHeight(true);
        jScrollPane1.setViewportView(jTable1);

        jButtonLoad.setText("Load CSV");
        jButtonLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoadActionPerformed(evt);
            }
        });

        jTextFieldFilePath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFilePathActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1251, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jButtonLoad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 27, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonLoad)
                    .addComponent(jTextFieldFilePath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 191, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDaysCalcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDaysCalcActionPerformed
        SimpleDateFormat myFormat = new SimpleDateFormat("dd MM yyyy");
        String christmasDate = "25 12 2018";

        //Get current date and format
        Date date = new Date();
        String formattedDate= myFormat.format(date);

        //Calculate days to Christmas and set in text field
    try {
        Date date1 = myFormat.parse(christmasDate);
        Date date2 = myFormat.parse(formattedDate);
        long diff = date1.getTime() - date2.getTime();
        String diffStr = Long.toString(TimeUnit.DAYS.convert(diff, TimeUnit.MILLISECONDS));
        //String diffStr = Long.toString(diff);
        jTextFieldChristmas.setText(diffStr);
    } catch (ParseException e) {
        e.printStackTrace();
    }     
    }//GEN-LAST:event_jButtonDaysCalcActionPerformed

    private void jTextFieldChristmasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldChristmasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldChristmasActionPerformed

    private void jButtonLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoadActionPerformed
        //Specify path of csv file to be loaded
        //Todo: possibly add browse and load if time allows
        String filePath = "C:\\1500000 Sales Records.csv";
        
        //File browser to choose file
        JFileChooser fileBrowser = new JFileChooser();
        fileBrowser.showOpenDialog(null);
        File csvFile = fileBrowser.getSelectedFile();
        filePath = csvFile.getAbsolutePath();
        jTextFieldFilePath.setText(filePath);
        
        //Create file object
//        File csvFile = new File(filePath);

        
//        Thread loadCsv = new Thread() {
//            public void run() {
//                
//                                try {
//            //Read File into file buffer
//            BufferedReader br = new BufferedReader(new FileReader(csvFile));
//            //Read first line of file and set as column header
//            String firstLine = br.readLine().trim();
//            String[] columnHeader = firstLine.split(",");
//            
//            //Create table model for table data
//            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
//            model.setColumnIdentifiers(columnHeader);
//            
//            String strLine;
//            
//            //To accomodate large files, read data and set in gui table 1 line at a time
//            //Note: 
//            // --While this approach is faster than reading data block and iterating through it to set each row in table, it is still slow
//            // --Should be optimised if time allows
//            while((strLine = br.readLine()) != null) {
//                strLine.trim();
//                String[] dataRow = strLine.split(",");
//                model.addRow(dataRow);
//                sleep(10);
//            }               
//            
//        } catch (Exception ex) {
//            Logger.getLogger(ChristmasShoppingGui.class.getName()).log(Level.SEVERE, null, ex);
//        }                 
//
//            }
//        };
//        
//        loadCsv.run();
        

        try {
            //Read File into file buffer
            BufferedReader br = new BufferedReader(new FileReader(csvFile));
            //Read first line of file and set as column header
            String firstLine = br.readLine().trim();
            String[] columnHeader = firstLine.split(",");
            
            //Create table model for table data
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            model.setColumnIdentifiers(columnHeader);
            
            String strLine;
            
            //To accomodate large files, read data and set in gui table 1 line at a time
            //Note: 
            // --While this approach is faster than reading data block and iterating through it to set each row in table, it is still slow
            // --Should be optimised if time allows
            while((strLine = br.readLine()) != null) {
                strLine.trim();
                String[] dataRow = strLine.split(",");
                model.addRow(dataRow);
            }               
            
        } catch (Exception ex) {
            Logger.getLogger(ChristmasShoppingGui.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonLoadActionPerformed

    private void jTextFieldCurrentTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCurrentTimeActionPerformed
    //Calculate current time
        Date date = new Date();
        String strDateFormat = "hh:mm:ss a";
        DateFormat dateFormat = new SimpleDateFormat(strDateFormat);
        String formattedDate= dateFormat.format(date);
        jTextFieldCurrentTime.setText(formattedDate);
    }//GEN-LAST:event_jTextFieldCurrentTimeActionPerformed

    private void jTextFieldFilePathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFilePathActionPerformed

    }//GEN-LAST:event_jTextFieldFilePathActionPerformed

private void jTextFieldCurrentTimeInit() {                                                      

    Thread clock = new Thread() {
        public void run() {

            try {
                while(true) {
                    //Calculate current time
                    Date date = new Date();
                    String strDateFormat = "hh:mm:ss a";
                    DateFormat dateFormat = new SimpleDateFormat(strDateFormat);
                    String formattedDate= dateFormat.format(date);
                    jTextFieldCurrentTime.setText(formattedDate);
                    sleep(1000); //creates 1 second tick of clock
                }
            }
            catch(InterruptedException e) {
                e.printStackTrace();
            }
        }
    };
    //start thread
    clock.start();
} 
    

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChristmasShoppingGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChristmasShoppingGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChristmasShoppingGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChristmasShoppingGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //Calculate current time
//        Date date = new Date();
//        String strDateFormat = "hh:mm:ss a";
//        DateFormat dateFormat = new SimpleDateFormat(strDateFormat);
//        String formattedDate= dateFormat.format(date);
//        jTextFieldCurrentTime.setText(strDateFormat);

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChristmasShoppingGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDaysCalc;
    private javax.swing.JButton jButtonLoad;
    private javax.swing.JLabel jLabelCurrentTime;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldChristmas;
    private javax.swing.JTextField jTextFieldCurrentTime;
    private javax.swing.JTextField jTextFieldFilePath;
    // End of variables declaration//GEN-END:variables
}
